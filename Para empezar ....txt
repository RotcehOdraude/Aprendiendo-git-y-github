Hola. Esta es la configuracion inicial de Git...

CONFIGURACION DEL NOMBRE, ecribe:
$ git config --global user.name "Hec" <<Sirve para configurar el nombre>>
$ git config --global user.name <<Sirve para ver la configuracion>>
$ git config --global user.name "Hector" <<As� se puede modificar el nombre>>

CONFIGURACION DEL EMAIL, escribe:
$ git config --global user.email "hectoreduardo354@hotmail.com"

CONFIGURACION DE COLORES, escribe:
$ git config --global color.ui true

$ git config --global --list <<Para ver nuestras configuraciones>>
---------------------------------------------------------------------------
$ git init <<Marca el inicio del proyecto>>
$ git status <<Muestra el estado del proyecto>>
$ git add NOMBRE_DEL_ARCHIVO
$ git add -A <<Para agregar todos los archivo>>
$ git commit -m "MENSAJE_PARA_IDENTIFICAR_EL_COMMIT"
--------------------------------------------------------------------
$ git log <<Nos da una lista de todos nuestros commit>>
$ git checkout CODIGO_HASH_�_RAMA <<Sirve para viajar entre los commits o entre las ramas>>
TRES TIPOS DE GIT RESET:(Funciona de la misma forma que checkout para moverse entre los commits)
$ git reset --soft <<Borra el commit y no borra el codigo >>
$ git reset --mixed <<Borra los archivos que estan addeados para el comit sin borrar el codigo>>
$ git reset --hard <<Borra todo lo que se encuentra ene el comitt>>
$ git help COMANDO <<Nos brinda informacion del comando>>
------------------------------------------------------------
$ git branch <<Nos muestra las ramas>>
$ git branch NOMBRE_DE_LA_RAMA <<Para crear una rama>>
$ git branch -D NOMBRE_DE_LA_RAMA <<Elimina la rama NOMBRE_DE_LA_RAMA>>
$ git checkout -b NOMBRE_DE_LA_RAMA <<Crea y se mueve al mismo tiempo a la rama NOMBRE_DE_LA_RAMA>>
FUSIONAR:(Fast-Forward....Manual Merge)
$ git merge NOMBRE_DE_LA_RAMA <<fusiona la rama NOMBRE_DE_LA_RAMA con la rama en donde nos encontramos actualmente>>
-------------------------------------------------
GITHUB
$ git clone <<Clona un proyecto de github>>
Para poner nuestro proyecto en github:
1. Ir a github y crear un nuevo repositorio
2. Copiar link https
3. Ir a git y escribir: $ git remote add origin LINK-HTTPS <<Vincula proyecto local con proyecto remoto>>
$ git remote -v <<Para comprobar que estan vinculados>>
$ git remote remove origin <<Sirve para desvincular los repositorios>>
4. Cargar nuestros archivos al repositorio remoto con: $ git push origin NOMBRE_DE_LA_RAMA <<manda nuestros cambios (commits) a github>>